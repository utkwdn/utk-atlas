// @use "variables";

//  html {
//   font-size: 100%;
//   /*16px*/
//   height: 100%;
//   position: relative;
//   width: 100%;
//   overflow-x: hidden;
// }
//
// body {
//   margin: 0;
//   height: 100%;
//   width: 100%;
//   position: relative;
// }

.hero202112Container {
  position: relative;
  overflow: hidden; // forces animated items to only show until the edge
  display: block;
  height: fit-content;
  pointer-events: none;
}
.hero202112A {
  position: relative;
  display: block;
  height: fit-content;
  // pointer-events: none; // fixed gsap not scrolling over pinned item!!!!!
}
.heroHolderA,
.heroHolderB {
  vertical-align: top;
  padding: 0;
  margin: 0;
}

.heroSquareA,
.heroSquareB {
  width: 100%;
  display: block;
  position: relative;
  img {
    width: 100%;
    height: 100%;
    display: block;
  }
}
.heroSquareB {
  img {
    width: 90%;
    height: 90%;
    margin-left: 10%;
  }
}

@-webkit-keyframes opacitySlide {
  0% {
    transform: translateY(300px);
  }
  25% {
    transform: translateY(200px);
  }
  75% {
    transform: translateY(50px);
  }
  100% {
    transform: translateY(0px);
  }
}
@keyframes opacitySlide {
  from {
    transform: translateY(100px);
    opacity: 0;
  }
  to {
    transform: translateY(0px);
    opacity: 1;
  }
}

@keyframes rainAnimateA {
  from {
    transform: translateY(600px);
    opacity: 0;
  }
  to {
    transform: translateY(0px);
    opacity: 1;
  }
}
@keyframes angleAnimateA {
  from {
    transform: translateY(-50px);
    opacity: 0;
  }
  to {
    transform: translateY(0px);
    opacity: 1;
  }
}

@keyframes fromLeftAnimate {
  from {
    transform: translateX(-50px);
    opacity: 0;
  }
  to {
    transform: translateX(0px);
    opacity: 1;
  }
}

@keyframes anim1 {
  from {
    transform: translateY(-100px);
    opacity: 0;
  }
  to {
    transform: translateY(0px);
    opacity: 1;
    border: solid 5px red;
  }
}

@keyframes anim2 {
  from {
    border: solid 5px green;
  }
  to {
    border: solid 5px purple;
  }
}

@keyframes animA01 {
  from {
    border: solid 5px green;
  }
  to {
    border: solid 5px purple;
  }
}

@keyframes animA02 {
  from {
    border: solid 5px green;
  }
  to {
    border: solid 5px purple;
  }
}

@keyframes animA02 {
  from {
    border: solid 5px green;
  }
  to {
    border: solid 5px purple;
  }
}

@media (prefers-reduced-motion: no-preference) {
  .softAppear {
    animation-name: opacitySlide;
    animation-duration: 2s;

    animation-fill-mode: both;
  }
  .softAppearRain {
    animation-name: rainAnimateA;
    animation-duration: 2s;
    z-index: 20;
    animation-fill-mode: both;
  }
  .angleSlideItemA {
    animation-name: angleAnimateA;
    animation-duration: 2s;

    animation-fill-mode: both;
  }
  .softAppearFromLeft {
    animation-name: fromLeftAnimate;
    animation-duration: 1.5s;
    animation-fill-mode: both;
  }
}

.heroRectangleHolderA,
.heroRectangleHolderB {
  display: block;
  position: relative;
}
.heroRectangleA,
.heroRectangleB {
  display: block;
  position: relative;
  border-right: 0.8rem solid white;
  border-top: 0.8rem solid white;
  border-bottom: 0.8rem solid white;
  margin-right: -5vw;
  overflow: visible;
  margin-top: 1rem;

  img {
    width: 100%;
    height: 100%;
    display: block;
  }
}

.heroRectangleB {
  margin-top: -5vw;
}
.angleBracketDown {
  content: "";
  width: 36%;
  //  border-top: 1.3rem solid variables.$utorange;
  border-top: 1.3rem solid #ff8200;
  z-index: 0;
  position: relative;
  left: 0;
  display: block;
  padding: 1rem;
  left: -1.2rem;
  top: 4rem;
  margin-top: -4.2rem; // fixes extra space at top
  &:before {
    content: "";
    width: 27%;
    height: auto;
    //  border-left: 1.2rem solid variables.$utorange;
    border-left: 1.2rem solid #ff8200;
    padding: 1.5rem;
    margin: -1rem;
  }
}

.angleSpaceMatchB {
  // forces space of angle bracket. Make Percentage Match the margin-left of heroSquareB
  margin-left: 10%;
}
.heroRainHolderA,
.heroRainHolderB {
  text-align: right;
  position: relative;
  img {
    right: 0;
    display: inline-block;
    position: relative;
    width: 100%;
    min-height: 75px;
    margin-top: 6vw;
    margin-bottom: -4rem;
    margin-right: -3vw;
  }
}
.heroRainHolderB {
  img {
    margin-right: -10vw;
  }
}

.heroRainHolderTripleA {
  display: none;
}
.ctaHolder {
  .btn-chevron {
    width: auto !important;

    pointer-events: visible; // necessary to make the button work since pin has them turned off
  }
}
.orangeBarHolderA {
  display: none;
  z-index: 2;
}
.orangeBarHolderB {
  display: block;
  position: relative;
  text-align: right;
  display: flex;
  flex-direction: row;
  justify-content: end;
  .ginghamChunkB {
    background-image: url("//images.utk.edu/images/www/hero202112/gingham-square-02.png");
    background-size: cover;
    height: 5rem;
    width: 5rem;
  }
}
.riverAerialHolder {
  display: block;
  width: 100%;
}
.orangeBarChunkB {
  display: inline-block;
  //  background-color: variables.$utorange;
  background-color: #ff8200;
  height: 5rem;
  width: 40vw;
}
@media screen and (min-width: 768px) {
  .heroRainHolderA,
  .heroRainHolderB {
    img {
      margin-top: 12vw;
    }
  }
}

@media screen and (min-width: 828px) {
  .heroRainHolderTripleA {
    display: block;
    position: relative;
    z-index: 16;
    img {
      display: inline-block;
      right: 0;
      display: inline-block;
      position: relative;
      width: 100%;
      min-height: 75px;
    }
  }
  .orangeBarHolderA {
    display: block;
    position: relative;
    text-align: right;
    display: flex;
    flex-direction: row;
    justify-content: end;
    .ginghamChunkA {
      background-image: url("//images.utk.edu/images/www/hero202112/gingham-square-02.png");
      background-size: cover;
      height: 5rem;
      width: 5rem;
    }
  }
  .orangeBarChunkA {
    display: inline-block;
    //  background-color: variables.$utorange;
    background-color: #ff8200;
    height: 5rem;
    width: 200px;
  }
}

/*--------------------------------------------------------------
CSS Grid layout for modern browsers:
--------------------------------------------------------------*/
/* Check for CSS Grid support: */
@supports (grid-area: auto) {
  .hero202112A {
    display: grid;
    grid-template-columns: 4.82fr 10.7fr 1fr;
    grid-template-rows: 4rem min-content min-content min-content min-content min-content;
  }
  .heroHolderA,
  .heroHolderB {
    grid-column: 2 / 3;
    grid-row: 2 / 5;
    z-index: 10;
    height: min-content;
  }
  .heroHolderB {
    // mobile
    grid-row: 9 / span 4;
    margin-top: -10%;
    margin-right: -3vw;
  }
  .heroRectangleHolderA,
  .heroRectangleHolderB {
    grid-column: 1 / 2;
    grid-row: 3 / span 4;
    z-index: 12;
  }

  .heroRectangleHolderB {
    grid-row: 11 / span 4;
  }
  .heroRainHolderA,
  .heroRainholderB {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    position: relative;
    z-index: 15;
  }
  .heroRainHolderB {
    grid-row: 9 / 10;
    z-index: 16;
  }
  .ctaHolder {
    grid-column: 1 / 4;
    grid-row: 7 / 8;
    z-index: 10;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 8vw;
  }

  .dotSquareHolder {
    grid-column: 1 / 2;
    grid-row: 1 / span 3;
    max-width: 60vw;
    position: relative;
    background-image: url("//images.utk.edu/images/www/hero202112/square-dots-01.svg");
    background-repeat: repeat-x;
    scale: (1.5);
    opacity: 0.3;
    display: block;
    z-index: 2;
  }
  .riverAerialHolder {
    grid-column: 1 / 4;
  }

  .orangeBarHolderB {
    grid-column: 2 / 5;
    grid-row: 13 / 15;
    margin-top: 1.3rem;
  }
  /* viewports  and wider: */
  @media screen and (min-width: 768px) {
    .hero202112A {
      grid-template-columns: 2.2fr 2fr 3.92fr 4.4fr 0.7fr 5.5fr 0.7fr;
      grid-template-rows: 4rem repeat(7, minmax(auto, min-content)) 1fr;
      // background-color: purple; //problem solving
    }
    .heroHolderA {
      grid-column: 2 / 5;
    }
    .heroHolderB {
      // at wide widths
      margin-left: -7%;
      margin-right: 0; // removes previously set position
      margin-top: 0; // removes previously set position
      width: 107%;
      grid-row: 2 / 5;
      grid-column: 3 / 5;
      align-self: start;
      text-align: left;
      overflow: visible;
      height: fit-content;
    }
    .heroSquareB {
      img {
        width: 100%;
        height: 100%;
        margin-left: 0;
        margin-top: 0;
      }
    }
    .heroRectangleHolderA,
    .heroRectangleHolderB {
      grid-column: 1 / 3;
      grid-row: 3 / span 5;
    }

    .heroRectangleHolderB {
      width: 121%;
    }

    .heroRectangleA,
    .heroRectangleB {
      margin-right: 0;
      margin-top: 0;
    }

    .ctaHolder {
      grid-column: 6/ 7;
      grid-row: 2 / 5;
      display: block;
      padding: 0;
      /*
      position: sticky;
      top: 0;
      left: 0;
      align-self: start;
      border: 2px solid red;
      */
    }
    .riverAerialHolder {
      grid-column: 4 / 8;
      grid-row: 5 / span 5;
      width: 115%;
      align-self: end;
      margin-left: -15%; // matches the amount over 100% of width
      display: block;
      margin-bottom: 4rem;
    }
    .riverAerial {
      // max-height: 350px;
      overflow: hidden;
      display: block;
      align-self: end;
      img {
        width: 100%;
        height: auto;
      }
    }

    .angleBracketUp {
      transform: scaleY(-1); // reflecting
      content: "";
      width: 36%;
      // border-top: 1.3rem solid variables.$utorange;
      border-top: 1.3rem solid #ff8200;
      z-index: 0;
      position: relative;
      left: 0;
      display: block;
      padding: 1rem;
      left: -1.2rem;
      top: 4rem;
      margin-top: -8rem;

      &:before {
        content: "";
        width: 27%;
        height: auto;
        //  border-left: 1.2rem solid variables.$utorange;
        border-left: 1.2rem solid #ff8200;
        padding: 1.5rem;

        margin: -1rem;
      }
    }

    .heroRainHolderB {
      grid-column: 2 / 3;
      grid-row: 3 /4;
      width: 170%;
      margin-left: -10%;
      img {
        margin-bottom: 0;
        margin-right: 0;
        margin-top: -3vw;
      }
    }

    .orangeBarHolderB,
    .angleSpaceMatchB {
      display: none;
      // temporary removed for wide
    }

    .layoutB {
      // visibility: hidden;
      transform: translateY(500);
      // opacity: 0;
    }
  }
  @media screen and (min-width: 829px) {
    .heroRainHolderTripleA {
      grid-column: 4/ 6;
      grid-row: 5 /6;
      img {
        margin-top: -4rem;
        margin-right: -4rem;
        z-index: 16;
      }
    }
    .orangeBarHolderA {
      grid-column: 6 / 8;
      grid-row: 5 / 6;
    }

    .orangeBarHolderB {
      display: block;
      grid-column: 1 /2;
      grid-row: 2 /3;
      margin-top: 1.3rem;
      align-self: end;
      width: 115%;
      display: flex;
      justify-content: flex-start;
      z-index: 15;
      .orangeBarChunkB {
        display: inline-block;
        //    background-color: variables.$utorange;
        background-color: #ff8200;
        height: 5rem;
        width: 3rem;
      }
      .ginghamChunkB {
        background-size: cover;
        height: 5rem;
        width: 5rem;
      }
    }
    .ctaHolder p {
      max-width: 38ch;
    }
  }
  /*
  @media screen and (min-width: 1530px) {
    .hero202112A {
      grid-template-columns: 2.2fr 2fr 2.92fr 7.4fr 0.2fr 7.5fr 0.2fr;
      grid-template-rows: 4rem repeat(7, minmax(auto, min-content)) 1fr;
      // background-color: purple; //problem solving
    }

    .heroRectangleHolderA,
    .heroRectangleHolderB {
      grid-column: 1 / 3;
      grid-row: 3 / span 2;
      width: 90%;
    }
    .heroHolderA,
    .heroHolderB {
      width: 80%;
      height: 80%;
      grid-column: 2 / 5;
    }

    .heroHolderB {
      // at wide widths
      margin-left: 0;
      width: 70%;
    }
    .heroRainHolderTripleA {
      grid-column: 4/ 6;
      grid-row: 5 /6;
      margin-top: -200px;
    }
    .riverAerialHolder {
      grid-column: 4 / 8;
      grid-row: 5 / span 5;
      width: 115%;
      align-self: end;
      margin-left: -15%; // matches the amount over 100% of width
      display: block;
      margin-bottom: 4rem;
    }
  }
  */
  @media screen and (min-width: 1600px) {
    .ctaHolder h2 {
      max-width: 5ch;
    }
  }
}
